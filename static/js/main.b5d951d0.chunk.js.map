{"version":3,"sources":["App.js","index.js"],"names":["App","inputRef","useRef","resultRef","_useState","useState","_useState2","_slicedToArray","result","setResult","React","createElement","className","ref","pattern","type","placeholder","onClick","e","preventDefault","Number","current","value","select","textContent","concat","ReactDOM","createRoot","document","getElementById","render"],"mappings":"sKA8EeA,MAvEf,WACE,IAAMC,EAAWC,iBAAO,MAClBC,EAAYD,iBAAO,MAAME,EACHC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAhCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GA0CxB,OACEI,QAAAC,cAAA,OAAKC,UAAU,OACbF,QAAAC,cAAA,WACED,QAAAC,cAAA,UAAI,4BAEND,QAAAC,cAAA,YACED,QAAAC,cAAA,KAAGE,IAAKV,GACLK,GAEHE,QAAAC,cAAA,SACEG,QAAQ,QACRD,IAAKZ,EACLc,KAAK,SACLC,YAAY,kBAEdN,QAAAC,cAAA,UAAQM,QAvDd,SAAcC,GACZA,EAAEC,iBACFV,EAAU,SAACD,GAAM,OAAKA,EAASY,OAAOnB,EAASoB,QAAQC,WAqD5B,OACvBZ,QAAAC,cAAA,UAAQM,QAnDd,SAAeC,GACbA,EAAEC,iBACFV,EAAU,SAACD,GAAM,OAAKA,EAASY,OAAOnB,EAASoB,QAAQC,SACvDrB,EAASoB,QAAQE,WAgDW,YACxBb,QAAAC,cAAA,UAAQM,QA9Cd,SAAeC,GACbA,EAAEC,iBACFV,EAAU,SAACD,GAAM,OAAKA,EAASY,OAAOnB,EAASoB,QAAQC,SACvDrB,EAASoB,QAAQE,WA2CW,YACxBb,QAAAC,cAAA,UAAQM,QAzCd,SAAgBC,GAEd,GADAA,EAAEC,iBACqC,IAAnCC,OAAOnB,EAASoB,QAAQC,OAG1B,OAFAnB,EAAUkB,QAAQG,YAAW,2CAAAC,OAA8CjB,QAC3EP,EAASoB,QAAQE,SAGnBd,EAAU,SAACD,GAAM,OAAKA,EAASY,OAAOnB,EAASoB,QAAQC,SACvDrB,EAASoB,QAAQE,WAiCY,UACzBb,QAAAC,cAAA,UAAQM,QA/Bd,SAAoBC,GAClBA,EAAEC,iBACFlB,EAASoB,QAAQC,MAAQ,GACzBrB,EAASoB,QAAQE,WA4BgB,eAC7Bb,QAAAC,cAAA,UAAQM,QA1Bd,SAAqBC,GACnBA,EAAEC,iBACFV,EAAU,GACVR,EAASoB,QAAQE,WAuBiB,mBCpEzBG,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAOpB,IAAAC,cAACX,EAAG","file":"static/js/main.b5d951d0.chunk.js","sourcesContent":["import {\n  useState,\n  useRef,\n  React\n} from \"react\"; \nimport \"./App.css\";\n\nfunction App() { \n  const inputRef = useRef(null); \n  const resultRef = useRef(null); \n  const [result, setResult] = useState(0); \n \n  function plus(e) { \n    e.preventDefault(); \n    setResult((result) => result + Number(inputRef.current.value)); \n  }; \n \n  function minus(e) {\n    e.preventDefault();\n    setResult((result) => result - Number(inputRef.current.value));\n    inputRef.current.select();\n  }\n\n  function times(e) {\n    e.preventDefault();\n    setResult((result) => result * Number(inputRef.current.value));\n    inputRef.current.select();\n  }\n\n  function divide(e) {\n    e.preventDefault();\n    if (Number(inputRef.current.value) === 0) {\n      resultRef.current.textContent = `Cannot divide by zero! Previous result: ${result}`;\n      inputRef.current.select();\n      return;\n    }\n    setResult((result) => result / Number(inputRef.current.value));\n    inputRef.current.select();\n  }\n\n  function resetInput(e) {\n    e.preventDefault();\n    inputRef.current.value = '';\n    inputRef.current.select();\n  }\n\n  function resetResult(e) {\n    e.preventDefault();\n    setResult(0);\n    inputRef.current.select();\n  }\n \n  return ( \n    <div className=\"App\"> \n      <div> \n        <h1>Simple React Calculator</h1> \n      </div> \n      <form> \n        <p ref={resultRef}> \n          {result}\n        </p> \n        <input\n          pattern=\"[0-9]\" \n          ref={inputRef} \n          type=\"number\" \n          placeholder=\"Type a number\" \n        /> \n        <button onClick={plus}>add</button> \n        <button onClick={minus}>subtract</button>\n        <button onClick={times}>multiply</button>\n        <button onClick={divide}>divide</button>\n        <button onClick={resetInput}>reset input</button>\n        <button onClick={resetResult}>reset result</button>\n      </form> \n    </div> \n  ); \n} \n \nexport default App; \n","import React from 'react'; \nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}